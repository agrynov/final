MB-AIR-AG:terraform andrijgrinov$ terraform validate
Success! The configuration is valid.

MB-AIR-AG:terraform andrijgrinov$ terraform apply

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # module.compute.aws_eip.sp-ag-nat will be created
  + resource "aws_eip" "sp-ag-nat" {
      + allocation_id        = (known after apply)
      + arn                  = (known after apply)
      + association_id       = (known after apply)
      + carrier_ip           = (known after apply)
      + customer_owned_ip    = (known after apply)
      + domain               = (known after apply)
      + id                   = (known after apply)
      + instance             = (known after apply)
      + ipam_pool_id         = (known after apply)
      + network_border_group = (known after apply)
      + network_interface    = (known after apply)
      + private_dns          = (known after apply)
      + private_ip           = (known after apply)
      + ptr_record           = (known after apply)
      + public_dns           = (known after apply)
      + public_ip            = (known after apply)
      + public_ipv4_pool     = (known after apply)
      + tags                 = {
          + "Name"  = "sp-ag-nat-eip"
          + "Owner" = "sp3agrynov"
        }
      + tags_all             = {
          + "Name"  = "sp-ag-nat-eip"
          + "Owner" = "sp3agrynov"
        }
      + vpc                  = (known after apply)
    }

  # module.compute.aws_instance.sp-ag-jenkins-master will be created
  + resource "aws_instance" "sp-ag-jenkins-master" {
      + ami                                  = "ami-03250b0e01c28d196"
      + arn                                  = (known after apply)
      + associate_public_ip_address          = true
      + availability_zone                    = (known after apply)
      + cpu_core_count                       = (known after apply)
      + cpu_threads_per_core                 = (known after apply)
      + disable_api_stop                     = (known after apply)
      + disable_api_termination              = (known after apply)
      + ebs_optimized                        = (known after apply)
      + enable_primary_ipv6                  = (known after apply)
      + get_password_data                    = false
      + host_id                              = (known after apply)
      + host_resource_group_arn              = (known after apply)
      + iam_instance_profile                 = (known after apply)
      + id                                   = (known after apply)
      + instance_initiated_shutdown_behavior = (known after apply)
      + instance_lifecycle                   = (known after apply)
      + instance_state                       = (known after apply)
      + instance_type                        = "t2.micro"
      + ipv6_address_count                   = (known after apply)
      + ipv6_addresses                       = (known after apply)
      + key_name                             = "jenkins-key"
      + monitoring                           = (known after apply)
      + outpost_arn                          = (known after apply)
      + password_data                        = (known after apply)
      + placement_group                      = (known after apply)
      + placement_partition_number           = (known after apply)
      + primary_network_interface_id         = (known after apply)
      + private_dns                          = (known after apply)
      + private_ip                           = (known after apply)
      + public_dns                           = (known after apply)
      + public_ip                            = (known after apply)
      + secondary_private_ips                = (known after apply)
      + security_groups                      = (known after apply)
      + source_dest_check                    = true
      + spot_instance_request_id             = (known after apply)
      + subnet_id                            = (known after apply)
      + tags                                 = {
          + "Name"  = "sp-ag-jenkins-master"
          + "Owner" = "sp3agrynov"
        }
      + tags_all                             = {
          + "Name"  = "sp-ag-jenkins-master"
          + "Owner" = "sp3agrynov"
        }
      + tenancy                              = (known after apply)
      + user_data                            = "0093c322c6de035c5c900906234871f3598b4381"
      + user_data_base64                     = (known after apply)
      + user_data_replace_on_change          = false
      + vpc_security_group_ids               = (known after apply)

      + capacity_reservation_specification (known after apply)

      + cpu_options (known after apply)

      + ebs_block_device (known after apply)

      + enclave_options (known after apply)

      + ephemeral_block_device (known after apply)

      + instance_market_options (known after apply)

      + maintenance_options (known after apply)

      + metadata_options (known after apply)

      + network_interface (known after apply)

      + private_dns_name_options (known after apply)

      + root_block_device (known after apply)
    }

  # module.compute.aws_instance.sp-ag-jenkins-worker will be created
  + resource "aws_instance" "sp-ag-jenkins-worker" {
      + ami                                  = "ami-03250b0e01c28d196"
      + arn                                  = (known after apply)
      + associate_public_ip_address          = false
      + availability_zone                    = (known after apply)
      + cpu_core_count                       = (known after apply)
      + cpu_threads_per_core                 = (known after apply)
      + disable_api_stop                     = (known after apply)
      + disable_api_termination              = (known after apply)
      + ebs_optimized                        = (known after apply)
      + enable_primary_ipv6                  = (known after apply)
      + get_password_data                    = false
      + host_id                              = (known after apply)
      + host_resource_group_arn              = (known after apply)
      + iam_instance_profile                 = (known after apply)
      + id                                   = (known after apply)
      + instance_initiated_shutdown_behavior = (known after apply)
      + instance_lifecycle                   = (known after apply)
      + instance_state                       = (known after apply)
      + instance_type                        = "t2.micro"
      + ipv6_address_count                   = (known after apply)
      + ipv6_addresses                       = (known after apply)
      + key_name                             = "jenkins-key"
      + monitoring                           = (known after apply)
      + outpost_arn                          = (known after apply)
      + password_data                        = (known after apply)
      + placement_group                      = (known after apply)
      + placement_partition_number           = (known after apply)
      + primary_network_interface_id         = (known after apply)
      + private_dns                          = (known after apply)
      + private_ip                           = (known after apply)
      + public_dns                           = (known after apply)
      + public_ip                            = (known after apply)
      + secondary_private_ips                = (known after apply)
      + security_groups                      = (known after apply)
      + source_dest_check                    = true
      + spot_instance_request_id             = (known after apply)
      + subnet_id                            = (known after apply)
      + tags                                 = {
          + "Name"  = "sp-ag-jenkins-worker"
          + "Owner" = "sp3agrynov"
        }
      + tags_all                             = {
          + "Name"  = "sp-ag-jenkins-worker"
          + "Owner" = "sp3agrynov"
        }
      + tenancy                              = (known after apply)
      + user_data                            = "0093c322c6de035c5c900906234871f3598b4381"
      + user_data_base64                     = (known after apply)
      + user_data_replace_on_change          = false
      + vpc_security_group_ids               = (known after apply)

      + capacity_reservation_specification (known after apply)

      + cpu_options (known after apply)

      + ebs_block_device (known after apply)

      + enclave_options (known after apply)

      + ephemeral_block_device (known after apply)

      + instance_market_options (known after apply)

      + maintenance_options (known after apply)

      + metadata_options (known after apply)

      + network_interface (known after apply)

      + private_dns_name_options (known after apply)

      + root_block_device (known after apply)
    }

  # module.compute.aws_internet_gateway.sp-ag-igw will be created
  + resource "aws_internet_gateway" "sp-ag-igw" {
      + arn      = (known after apply)
      + id       = (known after apply)
      + owner_id = (known after apply)
      + tags     = {
          + "Name"  = "sp-ag-igw"
          + "Owner" = "sp3agrynov"
        }
      + tags_all = {
          + "Name"  = "sp-ag-igw"
          + "Owner" = "sp3agrynov"
        }
      + vpc_id   = (known after apply)
    }

  # module.compute.aws_key_pair.sp-ag-jenkins-key will be created
  + resource "aws_key_pair" "sp-ag-jenkins-key" {
      + arn             = (known after apply)
      + fingerprint     = (known after apply)
      + id              = (known after apply)
      + key_name        = "jenkins-key"
      + key_name_prefix = (known after apply)
      + key_pair_id     = (known after apply)
      + key_type        = (known after apply)
      + public_key      = "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIPPpz5fSBEv56vyejq5P1syaizYzFoNY7GFi1AUMMz3c andrijgrinov@MB-AIR-AG.local"
      + tags_all        = (known after apply)
    }

  # module.compute.aws_nat_gateway.sp-ag-nat will be created
  + resource "aws_nat_gateway" "sp-ag-nat" {
      + allocation_id                      = (known after apply)
      + association_id                     = (known after apply)
      + connectivity_type                  = "public"
      + id                                 = (known after apply)
      + network_interface_id               = (known after apply)
      + private_ip                         = (known after apply)
      + public_ip                          = (known after apply)
      + secondary_private_ip_address_count = (known after apply)
      + secondary_private_ip_addresses     = (known after apply)
      + subnet_id                          = (known after apply)
      + tags                               = {
          + "Name"  = "sp-ag-nat-gateway"
          + "Owner" = "sp3agrynov"
        }
      + tags_all                           = {
          + "Name"  = "sp-ag-nat-gateway"
          + "Owner" = "sp3agrynov"
        }
    }

  # module.compute.aws_route_table.sp-ag-private-rt will be created
  + resource "aws_route_table" "sp-ag-private-rt" {
      + arn              = (known after apply)
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + route            = [
          + {
              + cidr_block                 = "0.0.0.0/0"
              + nat_gateway_id             = (known after apply)
                # (11 unchanged attributes hidden)
            },
        ]
      + tags             = {
          + "Name"  = "sp-ag-private-rt"
          + "Owner" = "sp3agrynov"
        }
      + tags_all         = {
          + "Name"  = "sp-ag-private-rt"
          + "Owner" = "sp3agrynov"
        }
      + vpc_id           = (known after apply)
    }

  # module.compute.aws_route_table.sp-ag-public-rt will be created
  + resource "aws_route_table" "sp-ag-public-rt" {
      + arn              = (known after apply)
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + route            = [
          + {
              + cidr_block                 = "0.0.0.0/0"
              + gateway_id                 = (known after apply)
                # (11 unchanged attributes hidden)
            },
        ]
      + tags             = {
          + "Name"  = "sp-ag-public-rt"
          + "Owner" = "sp3agrynov"
        }
      + tags_all         = {
          + "Name"  = "sp-ag-public-rt"
          + "Owner" = "sp3agrynov"
        }
      + vpc_id           = (known after apply)
    }

  # module.compute.aws_route_table_association.sp-ag-private will be created
  + resource "aws_route_table_association" "sp-ag-private" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.compute.aws_route_table_association.sp-ag-public will be created
  + resource "aws_route_table_association" "sp-ag-public" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.compute.aws_security_group.sp-ag-jenkins-sg will be created
  + resource "aws_security_group" "sp-ag-jenkins-sg" {
      + arn                    = (known after apply)
      + description            = "Allow SSH and HTTP"
      + egress                 = [
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + from_port        = 0
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "-1"
              + security_groups  = []
              + self             = false
              + to_port          = 0
                # (1 unchanged attribute hidden)
            },
        ]
      + id                     = (known after apply)
      + ingress                = [
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + from_port        = 22
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "tcp"
              + security_groups  = []
              + self             = false
              + to_port          = 22
                # (1 unchanged attribute hidden)
            },
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + from_port        = 80
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "tcp"
              + security_groups  = []
              + self             = false
              + to_port          = 80
                # (1 unchanged attribute hidden)
            },
        ]
      + name                   = "sp-ag-jenkins-sg"
      + name_prefix            = (known after apply)
      + owner_id               = (known after apply)
      + revoke_rules_on_delete = false
      + tags                   = {
          + "Name"  = "sp-ag-jenkins-sg"
          + "Owner" = "sp3agrynov"
        }
      + tags_all               = {
          + "Name"  = "sp-ag-jenkins-sg"
          + "Owner" = "sp3agrynov"
        }
      + vpc_id                 = (known after apply)
    }

  # module.compute.aws_subnet.sp-ag-private will be created
  + resource "aws_subnet" "sp-ag-private" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "eu-central-1a"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.2.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Name"  = "sp-ag-private-subnet"
          + "Owner" = "sp3agrynov"
        }
      + tags_all                                       = {
          + "Name"  = "sp-ag-private-subnet"
          + "Owner" = "sp3agrynov"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.compute.aws_subnet.sp-ag-public will be created
  + resource "aws_subnet" "sp-ag-public" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "eu-central-1a"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.1.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = true
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Name"  = "sp-ag-public-subnet"
          + "Owner" = "sp3agrynov"
        }
      + tags_all                                       = {
          + "Name"  = "sp-ag-public-subnet"
          + "Owner" = "sp3agrynov"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.compute.aws_vpc.sp-ag-main will be created
  + resource "aws_vpc" "sp-ag-main" {
      + arn                                  = (known after apply)
      + cidr_block                           = "10.0.0.0/16"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_dns_hostnames                 = true
      + enable_dns_support                   = true
      + enable_network_address_usage_metrics = (known after apply)
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags                                 = {
          + "Name"  = "sp-ag-vpc"
          + "Owner" = "sp3agrynov"
        }
      + tags_all                             = {
          + "Name"  = "sp-ag-vpc"
          + "Owner" = "sp3agrynov"
        }
    }

Plan: 14 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + sp-ag-jenkins_master_private_ip = (known after apply)
  + sp-ag-jenkins_master_public_ip  = (known after apply)
  + sp-ag-jenkins_worker_private_ip = (known after apply)

Do you want to perform these actions?
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  Enter a value: yes

module.compute.aws_key_pair.sp-ag-jenkins-key: Creating...
module.compute.aws_eip.sp-ag-nat: Creating...
module.compute.aws_vpc.sp-ag-main: Creating...
module.compute.aws_key_pair.sp-ag-jenkins-key: Creation complete after 0s [id=jenkins-key]
module.compute.aws_eip.sp-ag-nat: Creation complete after 1s [id=eipalloc-08278dc0860122352]
module.compute.aws_vpc.sp-ag-main: Still creating... [10s elapsed]
module.compute.aws_vpc.sp-ag-main: Creation complete after 12s [id=vpc-0665c13bd2f53bf93]
module.compute.aws_internet_gateway.sp-ag-igw: Creating...
module.compute.aws_subnet.sp-ag-public: Creating...
module.compute.aws_subnet.sp-ag-private: Creating...
module.compute.aws_security_group.sp-ag-jenkins-sg: Creating...
module.compute.aws_internet_gateway.sp-ag-igw: Creation complete after 1s [id=igw-0a864bb5534c2d47a]
module.compute.aws_route_table.sp-ag-public-rt: Creating...
module.compute.aws_route_table.sp-ag-public-rt: Creation complete after 1s [id=rtb-0e639b036f93a17de]
module.compute.aws_subnet.sp-ag-private: Creation complete after 3s [id=subnet-06d12b820db142eab]
module.compute.aws_security_group.sp-ag-jenkins-sg: Creation complete after 3s [id=sg-0063d9716d0185d34]
module.compute.aws_instance.sp-ag-jenkins-worker: Creating...
module.compute.aws_subnet.sp-ag-public: Still creating... [10s elapsed]
module.compute.aws_subnet.sp-ag-public: Creation complete after 11s [id=subnet-049ac2f7bad183400]
module.compute.aws_route_table_association.sp-ag-public: Creating...
module.compute.aws_nat_gateway.sp-ag-nat: Creating...
module.compute.aws_instance.sp-ag-jenkins-master: Creating...
module.compute.aws_route_table_association.sp-ag-public: Creation complete after 0s [id=rtbassoc-06f35504300f15dae]
module.compute.aws_instance.sp-ag-jenkins-worker: Still creating... [10s elapsed]
module.compute.aws_nat_gateway.sp-ag-nat: Still creating... [10s elapsed]
module.compute.aws_instance.sp-ag-jenkins-master: Still creating... [10s elapsed]
module.compute.aws_instance.sp-ag-jenkins-worker: Still creating... [20s elapsed]
module.compute.aws_nat_gateway.sp-ag-nat: Still creating... [20s elapsed]
module.compute.aws_instance.sp-ag-jenkins-master: Still creating... [20s elapsed]
module.compute.aws_instance.sp-ag-jenkins-worker: Still creating... [30s elapsed]
module.compute.aws_instance.sp-ag-jenkins-worker: Creation complete after 34s [id=i-02c1ac0c6cd22afa3]
module.compute.aws_nat_gateway.sp-ag-nat: Still creating... [30s elapsed]
module.compute.aws_instance.sp-ag-jenkins-master: Still creating... [30s elapsed]
module.compute.aws_instance.sp-ag-jenkins-master: Creation complete after 32s [id=i-0083b4f9f4185c467]
module.compute.aws_nat_gateway.sp-ag-nat: Still creating... [40s elapsed]
module.compute.aws_nat_gateway.sp-ag-nat: Still creating... [50s elapsed]
module.compute.aws_nat_gateway.sp-ag-nat: Still creating... [1m0s elapsed]
module.compute.aws_nat_gateway.sp-ag-nat: Still creating... [1m10s elapsed]
module.compute.aws_nat_gateway.sp-ag-nat: Still creating... [1m20s elapsed]
module.compute.aws_nat_gateway.sp-ag-nat: Still creating... [1m30s elapsed]
module.compute.aws_nat_gateway.sp-ag-nat: Creation complete after 1m34s [id=nat-0e3538079ba99fc9b]
module.compute.aws_route_table.sp-ag-private-rt: Creating...
module.compute.aws_route_table.sp-ag-private-rt: Creation complete after 2s [id=rtb-0479e3e1d357f7835]
module.compute.aws_route_table_association.sp-ag-private: Creating...
module.compute.aws_route_table_association.sp-ag-private: Creation complete after 0s [id=rtbassoc-04f0dd453a17f0753]

Apply complete! Resources: 14 added, 0 changed, 0 destroyed.

Outputs:

sp-ag-jenkins_master_private_ip = "10.0.1.136"
sp-ag-jenkins_master_public_ip = "54.93.244.148"
sp-ag-jenkins_worker_private_ip = "10.0.2.206"